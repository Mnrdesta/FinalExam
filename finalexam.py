# -*- coding: utf-8 -*-
"""finalexam

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Azh4tcEKDA7qcXBx2Fmn_eoevxf7c2bk
"""
import streamlit as st
import tensorflow as tf
from PIL import Image, ImageOps
import numpy as np

@st.cache(allow_output_mutation=True, hash_funcs={tf.keras.models.Model: id})
def load_model():
    model = tf.keras.models.load_model('Finals.h5')
    return model

def import_and_predict(image_data, model):
    size = (64, 64)
    image = ImageOps.fit(image_data, size, Image.ANTIALIAS)
    img = np.asarray(image)
    img_reshape = img[np.newaxis, ...]
    prediction = model.predict(img_reshape)
    return prediction

st.write("""
# Digits Classifier
""")

file = st.file_uploader("Choose digit photo from computer", type=["jpg", "png"])

if file is None:
    st.text("Please upload an image file")
else:
    model = load_model()  # Load the model
    image = Image.open(file)
    st.image(image, use_column_width=True)
    prediction = import_and_predict(image, model)
    class_names = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    predicted_class = np.argmax(prediction)
    predicted_class_name = class_names[predicted_class]
    st.success("OUTPUT: " + predicted_class_name)
